<?phpnamespace model;require_once '../../config/Connection.php';require_once '../../Helper/ErrorMessage.php';use Exception;class booking extends \Connection{  public function store(string $name, string $date, string $email , string $studentId):void  {      try {          $query = "INSERT INTO booking(studentName, bookingDate, email, studentId) VALUES(?,?,?,?)";          $stmt = $this->Connect()->prepare($query);          if (!$stmt){              \ErrorMessage::JsonResponse(false,'Failed to Prepared Statement');              return;          }          $stmt->bind_param('ssss',$name,$date,$email,$studentId);          if ($stmt->execute()){              \ErrorMessage::JsonResponse(true,'Successfully booked');          }      }catch (Exception $e){          error_log('Error'. $e->getMessage());      }  }    public function showAll():array    {        try {            $result = $this->Connect()->query("SELECT * FROM booking");            $data = [];            if ($result->num_rows > 0){                while ($row = $result->fetch_assoc()){                    $data[] = $row;                }                return $data;            }        }catch (Exception $e){            error_log('Error'. $e->getMessage());        }        return [];    }    public function filterByStudentId($studentId):array    {        try {            $query = "SELECT * FROM booking WHERE studentId = ?";            $stmt = $this->Connect()->prepare($query);            if (!$stmt){                \ErrorMessage::JsonResponse(false,'Failed to Prepared Statement');            }            $stmt->bind_param('s',$studentId);            $stmt->execute();            $result = $stmt->get_result();            $data = [];            if ($result->num_rows > 0){                while ($row = $result->fetch_assoc()){                    $data[] = $row;                }                return $data;            }        }catch (Exception $e){            error_log('Error'. $e->getMessage());        }        return [];    }}